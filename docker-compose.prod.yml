version: '3.8'

services:
  # 后端API服务
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: quit-journey-api-prod
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB:-quitjourney}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME:-quitjourney_user}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-quitjourney_pass}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - JWT_SECRET=${JWT_SECRET:-please-change-this-secret-key-in-production}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-900000}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION:-2592000000}
      - API_DOCS_ENABLED=${API_DOCS_ENABLED:-false}
      - SWAGGER_UI_ENABLED=${SWAGGER_UI_ENABLED:-false}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    volumes:
      - app_logs:/var/log/quit-journey
    networks:
      - quit-journey-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    container_name: quit-journey-db-prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-quitjourney}
      - POSTGRES_USER=${DB_USERNAME:-quitjourney_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-quitjourney_pass}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/backups
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "127.0.0.1:5432:5432"  # 只允许本地访问
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-quitjourney_user} -d ${POSTGRES_DB:-quitjourney}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - quit-journey-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: quit-journey-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_default_password}
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"  # 只允许本地访问
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - quit-journey-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: quit-journey-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - quit-journey-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

  # 数据库备份服务
  db-backup:
    image: postgres:15-alpine
    container_name: quit-journey-backup
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-quitjourney}
      - POSTGRES_USER=${DB_USERNAME:-quitjourney_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-quitjourney_pass}
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
    volumes:
      - postgres_backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    command: crond -f
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - quit-journey-network

# 数据卷
volumes:
  postgres_data:
    driver: local
  postgres_backups:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

# 网络
networks:
  quit-journey-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
